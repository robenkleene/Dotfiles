.\" Automatically generated by Pandoc 3.6.3
.\"
.TH "RK_SWIFT_SNIP Reference" "" "" ""
.SH Print variable
.IP
.EX
print(\[dq]$1 =\[dq], ${1})
.EE
.SH Print
.IP
.EX
print(\[dq]${1:Message}\[dq])
.EE
.SH Print optional variable
.IP
.EX
print(\[dq]$1 =\[dq], ${1} ?? \[dq]nil\[dq]
.EE
.SH Swift template
.IP
.EX
\f[I]#!\f[R]/usr/bin/swift

$0
.EE
.SH Delegate
.IP
.EX
\f[B]protocol\f[R] ${1:MyClass}Delegate {
    \f[B]func\f[R] ${2:handleEvent}(\f[B]for\f[R]: $1})
    \f[B]func\f[R] ${1/.*/\[rs]l$0/}(_  ${1/.*/\[rs]l$0/}: $1, ${3:valueForKey} ${4:key}: ${5:String}) \-> ${6:Any}
}
.EE
.SH Weak self strong self
.IP
.EX
\f[B]guard\f[R] \f[B]let\f[R] \[rs]\[ga]self\[rs]\[ga] = \f[B]self\f[R] \f[B]else\f[R] { \f[B]return\f[R] }
.EE
.SH Protocol
.IP
.EX
\f[B]protocol\f[R] ${1:MyType} {
    $0
}
.EE
.SH Log variable
.IP
.EX
NSLog(\[dq]$1 = \f[B]\[rs](\f[R]${1:result})\[dq])
.EE
.SH Log
.IP
.EX
NSLog(\[dq]${1:Hello World}\[dq])
.EE
.SH For
.IP
.EX
\f[B]for\f[R] ${1:i} \f[B]in\f[R] ${2:0}..<${3:10} {
    ${0:print(\[dq]\f[B]\[rs](\f[R]$1)\[dq])}
}
.EE
.SH Class
.IP
.EX
\f[B]class\f[R] ${1:MyObject} {
    $0
}
.EE
.SH Expectation
.IP
.EX
\f[B]let\f[R] ${1:expect} = expectation(description: \[dq]${2:Expectation}\[dq])
$1.fulfill()
waitForExpectations(timeout: ${3:1.0}, handler: \f[B]nil\f[R])
.EE
.SH \f[CR]do\-catch\f[R]
.IP
.EX
\f[B]do\f[R] {
    ${1:${VISUAL:\f[B]try\f[R] someThrowingFunction()/\f[B]try\f[R]!/\f[B]try\f[R]/g}}
} \f[B]catch\f[R] {
    ${2:\f[B]throw\f[R] error}
}
.EE
