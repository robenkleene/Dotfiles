.\" Automatically generated by Pandoc 3.6
.\"
.TH "RK_VIM_SELECT Reference" "" "" ""
.SH Vim Select
.IP \[bu] 2
\f[CR]\[ha]R\f[R]: Selects the register that the replaced text gets
saved in (by default it uses the small delete register
[\f[CR]\[dq]\-\f[R]])
.IP \[bu] 2
\f[CR]\[ha]G\f[R]: Switches to visual mode
.IP \[bu] 2
\f[CR]\[ha]O\f[R]: Switches to visual mode for one command
.SS Snippets
Vim is cautious about making sure deleted text isn\[cq]t accidentally
lost, so it uses a register for replaced text in \f[CR]select\f[R] mode
(the small delete register [\f[CR]\[dq]\-\f[R]] by default).
So in \f[CR]select\f[R] mode \f[CR]\[ha]R\f[R] does not insert from a
register (\f[CR]\[ha]R\f[R] is normally how to insert from a register in
insert mode).
.PP
Snippets switch the mode to \f[CR]select\f[R] mode so that typing types
over the tab stop placeholder text.
.SS Inserting Text From a Register at a Snippet Tab Stop
After the snippet has been expanded, and the contents to insert is in
the unnamed register:
.IP "1." 3
\f[CR]\[ha]O\f[R] to enter visual mode
.IP "2." 3
\f[CR]P\f[R] to paste from the unnamed register
.IP "3." 3
\f[CR]i\f[R] to enter insert mode again
.IP "4." 3
\f[CR]<tab>\f[R] to continue snippet expansion (mirrored tab stops
won\[cq]t update until after this step)
.IP \[bu] 2
Another approach that works is to insert a character then delete it,
after doing so, the behavior of \f[CR]\[ha]R\f[R] will be restored to
inserting from a register.
