.\" Automatically generated by Pandoc 3.6.3
.\"
.TH "RK_LANG_OBJC_SNIP Reference" "" "" ""
.SH Print variable
.IP
.EX
NSLog(\[at]\[dq]$1 = %${2:\[at]}\[dq], ${1});
.EE
.SH Print
.IP
.EX
NSLog(\[at]\[dq]${1:Message}\[dq]);
.EE
.SH Objective\-C template
.IP
.EX
#import \f[B]<Foundation/Foundation.h>\f[R]

int main() {
    NSLog(\[at]\[dq]Hello, World!\[dq]);
}
.EE
.SH Main
.IP
.EX
int main() {
    NSLog(\[at]\[dq]Hello, World!\[dq]);
}
.EE
.SH Class
.IP
.EX
NS_ASSUME_NONNULL_BEGIN
\f[B]\[at]interface\f[R] ${1:MyClass} : NSObject
$2
\f[B]\[at]end\f[R]
NS_ASSUME_NONNULL_END

\f[B]\[at]implementation\f[R] $1
$0
\f[B]\[at]end\f[R]
.EE
.SH Delegate
.IP
.EX
NS_ASSUME_NONNULL_BEGIN
\f[B]\[at]protocol\f[R] ${1:MyClass}Delegate <NSObject>
\- (void)handleEventFor$1:($1 *)${2:myObject};
\- (${3:id})$2:($1 *)$2 ${4:valueForKey}:(${5:NSString *})${6:key};
\f[B]\[at]end\f[R]
NS_ASSUME_NONNULL_END
.EE
.SH Protocol
.IP
.EX
\f[B]\[at]protocol\f[R] ${1:MyProtocol} <NSObject>
$0
\f[B]\[at]end\f[R]
.EE
.SH Implementation
.IP
.EX
\f[B]\[at]implementation\f[R] ${1:MyClass}
$0
\f[B]\[at]end\f[R]
.EE
.SH Interface
.IP
.EX
NS_ASSUME_NONNULL_BEGIN
\f[B]\[at]interface\f[R] ${1:MyClass} : NSObject
$0
\f[B]\[at]end\f[R]
NS_ASSUME_NONNULL_END
.EE
.SH Class Extension
.IP
.EX
NS_ASSUME_NONNULL_BEGIN
\f[B]\[at]interface\f[R] ${1:MyClass} (${2:MyCategory})
$0
\f[B]\[at]end\f[R]
NS_ASSUME_NONNULL_END
.EE
.SH Property
.IP
.EX
\[at]property (nonatomic, strong) ${1:NSString} *${2:identifier};
.EE
.SH Delegate property
.IP
.EX
\[at]property (nonatomic, assign, nullable) id <${1:MyDelegate}> *delegate;
.EE
.SH Assume nonnull block
.IP
.EX
NS_ASSUME_NONNULL_BEGIN
${VISUAL}
NS_ASSUME_NONNULL_END
.EE
.SH Initialization method
.IP
.EX
\- (instancetype)initWith${1:Dictionary}:(NSDictionary *)${1/.*/\[rs]l$0/}
{
    \f[B]self\f[R] = [\f[B]super\f[R] init];
    \f[B]if\f[R] (\f[B]self\f[R]) {
        _${1/.*/\[rs]l$0/} = ${1/.*/\[rs]l$0/};
    }
    \f[B]return\f[R] \f[B]self\f[R];
}
.EE
.SH For in
.IP
.EX
\f[B]for\f[R] (${1:id} ${2:object} in ${3:objects}) {
    $0
}
.EE
.SH for
.IP
.EX
\f[B]for\f[R] (int ${1:i} = ${2:0}; $1 < ${3:10}; $1++) {
    ${0:NSLog(\[at]\[dq]%d\[dq], i);}
}
.EE
