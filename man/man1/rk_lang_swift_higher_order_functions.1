.\" Automatically generated by Pandoc 3.6.3
.\"
.TH "RK_LANG_SWIFT_HIGHER_ORDER_FUNCTIONS Reference" "" "" ""
.SH \f[CR]map\f[R]
.IP
.EX
let squares = values.map { $0 * $0 }
.EE
.SH \f[CR]compactMap\f[R]
.IP
.EX
let keys: [String?] = [\[dq]Tom\[dq], nil, \[dq]Peter\[dq], nil, \[dq]Harry\[dq]]
let validNames = keys.compactMap { $0 }
.EE
.SH \f[CR]flatMap\f[R]
.IP
.EX
let results = [[5,2,7], [4,8], [9,1,3]]
let allResults = results.flatMap { $0 }
.EE
.SH \f[CR]filter\f[R]
.IP
.EX
let even = digits.filter { $0 % 2 == 0 }
.EE
.SH \f[CR]reduce\f[R]
.IP
.EX
let items = [2.0,4.0,5.0,7.0]
let total = items.reduce(10.0, +)
.EE
.SH \f[CR]forEach\f[R]
.IP
.EX
numbers.forEach { $0.isMultiple(of: 2) ? print(\[dq]\[rs]($0) is even\[dq]) : print(\[dq]\[rs]($0) is odd\[dq]) }
.EE
.SH \f[CR]contains\f[R]
Returns a boolean.
.IP
.EX
let hasNumbersLessThan5 = numbers.contains { $0 < 5 }
.EE
.SH \f[CR]removeAll\f[R]
.IP
.EX
numbers.removeAll { $0 < 10 }
.EE
.SH \f[CR]sorted\f[R]
.IP
.EX
let sorted = toSort.sorted { $0 > $1 }
.EE
.SH \f[CR]split\f[R]
.IP
.EX
let message = \[dq]Hello World!\[dq]
let result = message.split { $0 == \[dq] \[dq] }
print(result)
// Prints [\[dq]Hello\[dq], \[dq]World!\[dq]]
.EE
