.\" Automatically generated by Pandoc 3.6
.\"
.TH "RK_GIT Reference" "" "" ""
.SH New Repo
.IP
.EX
git remote add origin <remote\-url>
git push origin master
git branch \-\-set\-upstream\-to=origin/master master
.EE
.SH Common
.IP \[bu] 2
\f[CR]git show <hash>\f[R]: Show a commit
.IP \[bu] 2
\f[CR]git clone \-\-depth 1 <repo>\f[R]: Clone without history
.IP \[bu] 2
\f[CR]git clean \-df\f[R]: Remove untracked
.SH Log
.IP \[bu] 2
\f[CR]git log \-p\f[R] (\f[CR]\-u\f[R], \f[CR]\-\-patch\f[R]): Generate
a patch for the commit, this is a lot like a combined \f[CR]git log\f[R]
and \f[CR]git diff\f[R]
.SS File Substitution
Using file substitution with with \f[CR]vimdiff\f[R]:
.IP
.EX
vimdiff <(git show development:Cartfile) Cartfile
.EE
.SH Remote
.IP \[bu] 2
\f[CR]git ls\-remote \-\-get\-url\f[R]: Print just the URL
.PP
Update origin: \f[CR]git remote rm origin\f[R] then
\f[CR]git remote add origin\f[R] with the new one.
.SS \f[CR]git\-remote\f[R]
.IP \[bu] 2
\f[CR]\-\-verbose\f[R] or \f[CR]\-v\f[R]: Print the full remote URL with
additional info
.SH Information
.IP \[bu] 2
\f[CR]git rev\-parse HEAD\f[R]: Print current commit
.SH Listing Files
.SS \f[CR]git ls\-files\f[R]
.IP \[bu] 2
\f[CR]\-m\f[R] or \f[CR]\-\-modified\f[R]: List modified files
.IP \[bu] 2
\f[CR]\-o\f[R] or \f[CR]\-\-others\f[R]: List untracked and ignored
files
.IP \[bu] 2
\f[CR]\-\-exclude\-standard\f[R]: Exclude ignored files
.PP
So \f[CR]git ls\-files \-o \-\-exclude\-standard\f[R] will list
untracked files that aren\[cq]t ignored.
.SH Merge Upstream
.IP
.EX
git merge upstream/master
.EE
.SH Revert to a Commit
This will make one commit that reverts to a previous commit:
.IP
.EX
git revert \-\-no\-commit 0cb64eb7eff0827d3fea1e6c4d172b9fe85b852b..HEAD
.EE
.SH From a Path
.IP \[bu] 2
\f[CR]\-C\f[R]: Run a git command from a path
