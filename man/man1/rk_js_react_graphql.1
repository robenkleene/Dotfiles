.\" Automatically generated by Pandoc 3.6.3
.\"
.TH "RK_JS_REACT_GRAPHQL Reference" "" "" ""
.SH Query
An example of querying for the site metadata description:
.IP
.EX
export const query = graphql\[ga]
query HomePageQuery {
    site {
        siteMetadata {
            description
        }
    }
}
\[ga]
.EE
.PP
An example retrieving a specific item:
.IP
.EX
query AboutQuery {
  allMarkdownRemark(filter: { frontmatter: { title: { eq: \[dq]About\[dq] } } }) {
    nodes {
      html
    }
  }
}
.EE
.SH Components
An example of accessing data in a component:
.IP
.EX
const HomePage = () => {
const HomePage = ({data}) => {
    return (
        <div>
        Hello!
        {data.site.siteMetadata.description}
        </div>
    )
}
.EE
.PP
\f[CR]set.siteMetadata.description\f[R] is exactly where the data is in
the hierarchy in the GraphiQL browser.
.PP
Accessing data in a component from an array:
.IP
.EX
const IndexPage = ({ data }) => (
  <Layout>
    <div dangerouslySetInnerHTML={{ __html: data.allMarkdownRemark.nodes[0].html }} />
  </Layout>
)
.EE
.SS Debugging
You can inspect \f[CR]data\f[R] in the React Developer Tools extension,
just select the parent element, and it will appear in the
\f[CR]props\f[R] section of the sidebar.
.PP
[IMAGE: GraphyQL Debugging]
