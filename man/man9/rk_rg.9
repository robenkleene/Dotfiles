.\" Automatically generated by Pandoc 3.4
.\"
.TH "RK_RG Reference" "" "" ""
.PP
\f[CR]rg\f[R] is case sensitive by default, this is to be consistent
with \f[CR]grep\f[R] which is also case sensitive by default.
.IP \[bu] 2
\f[CR]\-i\f[R] & \f[CR]\-\-ignore\-case\f[R]: Ignore case
.IP \[bu] 2
\f[CR]\-s\f[R] & \f[CR]\-\-case\-sensitive\f[R]: Case sensitive
.IP \[bu] 2
\f[CR]\-F\f[R]: Literal (no regular expression) search
.IP \[bu] 2
\f[CR]\-\-null\f[R]: Use \f[CR]NUL\f[R] byte terminator
.IP \[bu] 2
\f[CR]\-\-no\-ignore\f[R]: Include ignored files
.IP \[bu] 2
There\[cq]s no option to print full paths, but
\f[CR]rg <search term> $PWD\f[R] works as a workaround
.SH Filenames
.IP \[bu] 2
\f[CR]\-l\f[R] & \f[CR]\-\-files\-with\-matches\f[R]: List files with
matches
.IP \[bu] 2
\f[CR]\-g\f[R] or \f[CR]\-\-glob\f[R]: Filter by filename
.IP \[bu] 2
\f[CR]\-\-files\f[R]: Print each file but don\[cq]t search
.IP \[bu] 2
\f[CR]\-\-files \-g\f[R]: Search for files matching glob.
.SS Globs
.IP \[bu] 2
To match multiple file extensions, use a character group:
\f[CR]rg \-g \[aq]*.[hm]\[aq]\f[R],
\f[CR]\-g \[dq]*.{m,h,swift}\[dq]\f[R]
.IP \[bu] 2
To do a negative glob, precede with \f[CR]!\f[R], e.g.,
\f[CR]rg \-g \[dq]\[rs]!*.html\[dq] import\f[R]
.IP \[bu] 2
An example of the above techniques being combined:
\f[CR]rg \-s executable \-g \[dq]\[rs]!{handlers,fixers}/*\[dq]\f[R]
.IP \[bu] 2
Multiple globs can be combined, e.g., to filter based on an extension,
and exclude a directory
\f[CR]\-g \[aq]!Test\[aq] \-g \[aq]*.{h,cpp}\[aq]\f[R]
.IP \[bu] 2
Note that in \f[CR]rg\f[R] globs are case sensitive (in \f[CR]fd\f[R]
globs are case insensitive)
.SH Examples
.IP \[bu] 2
\f[CR]rg \-U \-\-multiline\-dotall \[dq]string1.*string2\[dq] \-g \[dq]*.m\[dq]\f[R]
.IP \[bu] 2
\f[CR]\-U\f[R]: Enable multiline search
.IP \[bu] 2
\f[CR]\-\-multiline\-dotall\f[R]: Allow \f[CR].\f[R] to match newlines
(alternatively, \f[CR](?s:.)\f[R] can be replace \f[CR].\f[R] to match
new lines)
.IP \[bu] 2
\f[CR]rg \-IN \-m 1 \[dq].*import.*\[dq]\f[R]: Print matching lines, max
1 per file, good for quickly remembering how to do something
.SH Troubleshooting
.IP \[bu] 2
To search for hyphens, precede the search term with \f[CR]\-\-\f[R],
e.g., \f[CR]rg \-\- \-\-bind\f[R]
.SH Special Characters
.SS ASCII Character Classes
.IP \[bu] 2
\f[CR][[:alnum:]]\f[R]: Alphanumeric
.IP \[bu] 2
\f[CR][[:alpha:]]\f[R]: Alphabetic
.IP \[bu] 2
\f[CR][[:ascii:]]\f[R]: Ascii
.IP \[bu] 2
\f[CR][[:blank:]]\f[R]: Blank
.IP \[bu] 2
\f[CR][[:cntrl:]]\f[R]: Control
.IP \[bu] 2
\f[CR][[:digit:]]\f[R]: Digits
.IP \[bu] 2
\f[CR][[:graph:]]\f[R]: Graphical
.IP \[bu] 2
\f[CR][[:lower:]]\f[R]: Lower case
.IP \[bu] 2
\f[CR][[:print:]]\f[R]: Printable
.IP \[bu] 2
\f[CR][[:punct:]]\f[R]: Punctuation
.IP \[bu] 2
\f[CR][[:space:]]\f[R]: Whitespace
.IP \[bu] 2
\f[CR][[:upper:]]\f[R]: Upper case
.IP \[bu] 2
\f[CR][[:word:]]\f[R]: Word characters
.IP \[bu] 2
\f[CR][[:xdigit:]]\f[R]: Hex digit
.SS Perl Character Classes
.IP \[bu] 2
\f[CR]\[rs]d\f[R]: Digit
.IP \[bu] 2
\f[CR]\[rs]D\f[R]: Not digit
.IP \[bu] 2
\f[CR]\[rs]s\f[R]: Whitespace
.IP \[bu] 2
\f[CR]\[rs]S\f[R]: Not whitespace
.IP \[bu] 2
\f[CR]\[rs]w\f[R]: Word character
.IP \[bu] 2
\f[CR]\[rs]b\f[R]: Not word character
.IP \[bu] 2
\f[CR]\[rs]W\f[R]: Not word character
.SS Empty Matches
.IP \[bu] 2
\f[CR]\[ha]\f[R]: The beginning of text (or start\-of\-line with
multi\-line mode)
.IP \[bu] 2
\f[CR]$\f[R]: The end of text (or end\-of\-line with multi\-line mode)
.IP \[bu] 2
\f[CR]\[rs]A\f[R]: Only the beginning of text (even with multi\-line
mode enabled)
.IP \[bu] 2
\f[CR]\[rs]z\f[R]: Only the end of text (even with multi\-line mode
enabled)
.IP \[bu] 2
\f[CR]\[rs]b\f[R]: A Unicode word boundary
.IP \[bu] 2
\f[CR]\[rs]B\f[R]: Not a Unicode word boundary
