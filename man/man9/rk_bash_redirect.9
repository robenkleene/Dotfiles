.\" Automatically generated by Pandoc 3.4
.\"
.TH "BASH_REDIRECT Reference" "" "" ""
.IP \[bu] 2
\f[CR]./a.out 2>/dev/null\f[R]: Discard standard error
.IP \[bu] 2
\f[CR]echo \[dq]Error\[dq] >&2\f[R]: Discard standard output to standard
error
.IP \[bu] 2
\f[CR]./a.out 2>error.log\f[R]: Redirect standard error to a file
.IP \[bu] 2
\f[CR]./a.out >output.log 2>&1\f[R]: Redirect standard error and
standard output to a file (note that order here matters, this won\[cq]t
work if the file is specified second)
.IP \[bu] 2
\f[CR]./a.out 2>&1 | tee output.log\f[R]: Redirect standard error and
standard output to a file and print to standard output
.IP \[bu] 2
\f[CR]./a.out 2>&1 | tee /dev/tty | sort\f[R]: Redirect standard error
and standard output to a pipe and to standard output
.SH Ordering
The reason \f[CR]./a.out >output.log 2>&1\f[R] redirects both standard
error and standard output to a file but
\f[CR]./a.out 2>&1 >output.log\f[R] doesn\[cq]t is because
\f[CR]2>&1\f[R] means \f[I]redirect standard error to where standard
output is pointing\f[R] if this is done before redirecting standard
output to a file, then standard output is still pointing at
\f[CR]/dev/tty\f[R] so that\[cq]s where standard error goes, where as if
it\[cq]s done after \f[CR]>output.log\f[R] then standard output is now
pointing at the file, so that\[cq]s where standard error goes.
