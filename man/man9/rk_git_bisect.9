.\" Automatically generated by Pandoc 3.4
.\"
.TH "RK_GIT_BISECT Reference" "" "" ""
.PP
This is a good start for finding a good commit:
.IP \[bu] 2
\f[CR]git log master..\f[R]: list all the commits on the current branch
that aren\[cq]t on master
.IP "1." 3
Start:
.RS 4
.IP
.EX
 git bisect start
.EE
.RE
.IP "2." 3
Say current commit is bad:
.RS 4
.IP
.EX
 git bisect bad
.EE
.RE
.IP "3." 3
Reference a known good commit:
.RS 4
.IP
.EX
 git bisect good 9bcdd91bacb943c638416bd7cf85b5adc6918034
.EE
.RE
.IP "4." 3
Git will automatically perform a checkout, then:
.RS 4
.IP
.EX
 git bisect good
.EE
.PP
Or:
.IP
.EX
 git bisect bad
.EE
.PP
Depending if commit is good or bad
.RE
.IP "5." 3
After finishing, to return to original state:
.RS 4
.IP
.EX
 git bisect reset
.EE
.RE
