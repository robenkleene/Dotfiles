.\" Automatically generated by Pandoc 3.4
.\"
.TH "RK_VIM_QUICKFIX Reference" "" "" ""
.PP
The quickfix list is global, so it\[cq]s usually appropriate for matches
across a project.
.IP \[bu] 2
\f[CR]:cnext\f[R] / \f[CR]:cprev\f[R]: Next / previous
\f[CR]quickfix\f[R] error
.IP \[bu] 2
\f[CR]:[cw]indow [height]\f[R]: Open \f[CR]quickfix\f[R] window if there
are errors, close it if there are not errors, optionally with a
\f[CR][height]\f[R] (note that this cannot change the height if the
\f[CR]quickfix\f[R] list is already visible)
.IP \[bu] 2
\f[CR]:cope[n] [height]\f[R]: Show \f[CR]quickfix\f[R] window,
optionally with a \f[CR][height]\f[R] (this works if the
\f[CR]quickfix\f[R] list is already visible)
.IP \[bu] 2
\f[CR]:res[ize] [N]\f[R]: Can also be used to set the
\f[CR]quickfix\f[R] list to a height \f[CR][N]\f[R]
.IP \[bu] 2
\f[CR]:ccl[ose]\f[R]: Close \f[CR]quickfix\f[R] window
.IP \[bu] 2
\f[CR]:cb[uffer]\f[R]: Populate the \f[CR]quickfix\f[R] list from the
results in the current window (this works for either \f[CR]grep\f[R]
formatted output or \f[CR]make\f[R] output)
.IP \[bu] 2
\f[CR]cexpr []\f[R]: Clear the \f[CR]quickfix\f[R] list
.IP \[bu] 2
The \[lq]c\[rq] in these commands probably stands for \[lq]compile\[rq]
.SH History
.IP \[bu] 2
\f[CR]:chi[story]\f[R]: Show list of error lists with the current list
marked
.IP \[bu] 2
\f[CR]:col[der]\f[R]: Go to previous \f[CR]quickfix\f[R] list
.IP \[bu] 2
\f[CR]:cnew[er]\f[R]: Go to next \f[CR]quickfix\f[R] list
.SH Search
.IP \[bu] 2
\f[CR]:vim[grep]\f[R] then \f[CR]C\-r C\-w\f[R] then \f[CR]%\f[R] to
make \f[CR]:vimgrep <current\-word> %\f[R] is a nice way to transfer the
current search term to the \f[CR]quickfix\f[R] list
(\f[CR]C\-r C\-w\f[R] inserts the word at the cursor)
.SH Mass Edits
.IP \[bu] 2
\f[CR]:cdo\f[R]: Do command to each entry in the \f[CR]quickfix\f[R]
list, e.g., \f[CR]:cdo s/this/that/g\f[R]
.IP \[bu] 2
\f[CR]:cfdo\f[R]: Do command to each file in the \f[CR]quickfix\f[R]
list, e.g., \f[CR]:cfdo %s/this/that/g\f[R]
.SS More Mass Edit Examples
On each entry in the \f[CR]quickfix\f[R] list:
.IP \[bu] 2
\f[CR]:cdo s/this/that/g\f[R]: Replace \f[CR]this\f[R] with
\f[CR]that\f[R] on each entry
.RS 2
.IP \[bu] 2
Add the \f[CR]e\f[R] flag (e.g., \f[CR]s/this/that/ge\f[R]) to suppress
errors for lines that contain no matches
.RE
.IP \[bu] 2
\f[CR]:cdo norm \[at]q\f[R]: Perform the macro in register \f[CR]q\f[R]
on each entry
.IP \[bu] 2
\f[CR]:cdo norm gcc\f[R]: Comment out each entry
.SH Filter
Requires \f[CR]packadd cfilter\f[R].
.IP \[bu] 2
\f[CR]:Cfilter\f[R]: Filter the error list by a pattern
.SH Other
Populating the \f[CR]quickfix\f[R] window with an arbitrary command:
.IP
.EX
:cexpr system(\[aq]rg \-\-vimgrep pathForResource \-g \[dq]*.swift\[dq] \[rs]| grep \-v func\[aq])
.EE
.PP
(Note a bug in \f[CR]nvim\f[R] seemingly stops this from working
multiple times in one session.)
