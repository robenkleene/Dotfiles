.\" Automatically generated by Pandoc 3.4
.\"
.TH "COCOA_OSLOG Reference" "" "" ""
.IP \[bu] 2
\f[CR]os_log\f[R] uses the \f[CR]StaticString\f[R] data type:
.RS 2
.IP
.EX
  let foo: StaticString = \[dq]Something happened.\[dq]
  os_log(foo)
.EE
.RE
.IP \[bu] 2
Log data is kept in a compress binary format \f[CR]tracev3\f[R]
.IP \[bu] 2
Logging has three basic levels: \f[CR]Default\f[R], \f[CR]Info\f[R], and
\f[CR]Debug\f[R]; and two special levels: \f[CR]Fault\f[R], and
\f[CR]Error\f[R]
.IP \[bu] 2
Use \f[CR]com.company.MyApp\f[R] for application\-level logs and
\f[CR]com.company.MyApp.SomeFramework\f[R] for framework\-level logs
.IP \[bu] 2
\[lq]Don\[cq]t include symbol information or source file line numbers in
messages.
The system automatically captures this information.\[rq]
.IP \[bu] 2
Log messages cannot be disabled from printing in Xcode console \c
.UR https://stackoverflow.com/questions/41142848/how-do-you-disable-os-log-info-and-os-log-debug-messages-in-xcode-console?rq=1
source
.UE \c
\ ## A Swift Example
.PP
Here\[cq]s some sample code in Swift:
.IP
.EX
let logHandle = OSLog(subsystem: \[dq]com.example.widget\[dq], category: \[dq]Setup\[dq])
os_log(.info, log: logHandle, \[dq]Hello, %{public}s!\[dq], world)
.EE
.SS \f[CR]log\f[R] Commane\-Line Tool
Stream live log messages (is this filtered by app?):
.IP
.EX
log stream
.EE
.PP
Only show matching events:
.IP
.EX
log stream \-\-predicate \[aq]eventMessage contains \[dq]my message\[dq]\[aq]
.EE
.PP
Display an archive:
.IP
.EX
log show system_logs.logarchive
.EE
.PP
For a single app (what\[cq]s the config command do?):
.IP
.EX
log config \-\-mode \[dq]level:debug\[dq] \-\-subsystem com.mycorp.myapp
.EE
.PP
This probably shows the log message?
.IP
.EX
xcrun simctl spawn booted log show system_logs.logarchive
.EE
.PP
What\[cq]s the difference between \f[CR]logarchive\f[R] and
\f[CR]tracev3\f[R]?
.SS Creating a Log Object
Defaults to system behavior
.IP
.EX
os_log_t log = os_log_create(\[dq]com.your_company.subsystem\[dq], \[dq]network\[dq]);

os_log(log, \[dq]This happened\[dq]);
.EE
.PP
\[lq]Reference to category and subsystem stored with every log
message\[rq] What\[cq]s this mean?
.SS Message Level Behavior
.IP \[bu] 2
\f[B]Default\f[R]: Always enabled, goes to disk
.IP \[bu] 2
\f[B]Info\f[R]: Enabled, in memory
.IP \[bu] 2
\f[B]Debug\f[R]: Not enabled, N/A for in memory
.SS Special
.IP \[bu] 2
\f[B]Error\f[R]: Always, disk
.IP \[bu] 2
\f[B]Fault\f[R]: Always, disk
.SS Guidelines
.IP \[bu] 2
\f[CR]os_log\f[R]: Log critical details to help debug issues
.IP \[bu] 2
\f[CR]os_log_info\f[R]: Log additional info that will be captured during
error or fault
.IP \[bu] 2
\f[CR]os_log_debug\f[R]: High\-volume debugging during development
.IP \[bu] 2
\f[CR]os_log_error\f[R]: Cause additional information to be captured
from app
.IP \[bu] 2
\f[CR]os_log_fault\f[R]: Cause additional information to be captured
from system
