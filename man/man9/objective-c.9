.\" Automatically generated by Pandoc 3.4
.\"
.TH "OBJECTIVE\-C" "9" "" "Reference"
.SH Compiling
.SS \f[CR]clang\f[R]
.IP
.EX
clang \-framework Foundation myprogram.m \-o myprogram
.EE
.SS \f[CR]gcc\f[R]
.IP
.EX
gcc hello_world_class.m \-framework Foundation \-o a.out
.EE
.SH Example
Here\[cq]s a simple working program:
.IP
.EX
#import \f[B]<Foundation/Foundation.h>\f[R]

\f[B]\[at]interface\f[R] SampleClass : NSObject
\- (void)sampleMethod;
\f[B]\[at]end\f[R]

\f[B]\[at]implementation\f[R] SampleClass
\- (void)sampleMethod {
    NSLog(\[at]\[dq]Hello, World! \[rs]n\[dq]);
}
\f[B]\[at]end\f[R]

int main() {
    SampleClass *sampleClass = [[SampleClass alloc] init];
    [sampleClass sampleMethod];
    \f[B]return\f[R] 0;
}
.EE
.SH \f[CR]nullable\f[R]
.SS Properties
.IP
.EX
\[at]property (nonatomic, strong, nonnull) NSString *key;
.EE
.SS Pointers
.IP
.EX
(NSString * _Nonnull)key
.EE
.SS Compiler Checks
To get rid off a null check between \f[CR]nullable\f[R] and
\f[CR]nonnull\f[R] just add a cast like \f[CR](NSURL *)\f[R] which
\f[CR]null_unspecified\f[R].
