.\" Automatically generated by Pandoc 3.4
.\"
.TH "RK_VIM_COMMAND_LINE Reference" "" "" ""
.IP \[bu] 2
\f[CR]:\f[R] to enter \f[CR]Command\-line\-mode\f[R]
.IP \[bu] 2
\f[CR]<C\-c>\f[R] or \f[CR]ESC\f[R]: Close command line and command line
window
.IP \[bu] 2
\f[CR]<C\-n>\f[R] / \f[CR]<C\-p>\f[R]: Next / previous command
.SH Files
.IP \[bu] 2
\f[CR]<cfile>\f[R] can be used to reference the file at the cursor,
e.g., what would be used for \f[CR]gf\f[R]
.SH Variables
The way to print environment variables like \f[CR]$VIMRUNTIME\f[R] is to
start a subshell:
.IP
.EX
\[ga]:!echo $VIMRUNTIME\[ga]
.EE
.SH Escaping
.IP \[bu] 2
To pass \f[CR]!\f[R], \f[CR]#\f[R], \f[CR]%\f[R] to a shell command,
which trigger it\[cq]s Vim command\-line meaning, just escape it with a
backslash: \f[CR]\[rs]!\f[R], \f[CR]\[rs]#\f[R], or \f[CR]\[rs]%\f[R]
(note that this is only necessary for \f[CR]:!rg\f[R] style commands,
custom commands like \f[CR]:Rg\f[R] do not require these characters to
be escaped)
.IP \[bu] 2
To use a \f[CR]|\f[R] after a shell command in Vim, e.g., to run
\f[CR]0r !git diff\f[R] then \f[CR]cd ..\f[R] on one command line insert
a \f[CR]<NL>\f[R] between the two commands with \f[CR]<C\-v><C\-j>\f[R]
(see \f[CR]h :bar\f[R])
.SH Editing
.IP \[bu] 2
\f[CR]:help cmdline\-editing\f[R]: Help
.IP \[bu] 2
\f[CR]<C\-b>\f[R] / \f[CR]<C\-e>\f[R]: Go to beginning/end of line
.IP \[bu] 2
\f[CR]<C\-u>\f[R]: Delete to the beginning of the line
.IP \[bu] 2
\f[CR]<C\-r><C\-f>\f[R]: Insert file under cursor
.IP \[bu] 2
\f[CR]<C\-r><C\-w>\f[R]: Insert word under cursor
.IP \[bu] 2
\f[CR]<C\-r><C\-a>\f[R]: Insert WORD under cursor
.IP \[bu] 2
\f[CR]<C\-r>%\f[R]: Insert name of current file
.IP \[bu] 2
\f[CR]<cfile>\f[R]: Another reference to the cursor file, this is
particularly useful with \f[CR]e <cfile>\f[R] to start create the file
at the cursor (\f[CR]<C\-r><C\-f>\f[R] can also be used in this case).
.IP \[bu] 2
There\[cq]s no undo for the command line unfortunately
.SH Types of Commands
.IP \[bu] 2
\f[CR]:normal dd\f[R]: Delete current line
.IP \[bu] 2
\f[CR]:echo expand(\[aq]%\[aq])\f[R]: Echo result of running a Vimscript
command
.SH Command\-Line Window
.SS Opening
.IP \[bu] 2
\f[CR]<C\-f>\f[R]: Enter command line window from command line (command
history)
.IP \[bu] 2
\f[CR]q:\f[R]: Enter command line window from normal mode
.IP \[bu] 2
\f[CR]q/\f[R]: Open search command line window from normal mode
.SS Closing
.IP \[bu] 2
\f[CR]<C\-w>c\f[R]: Close command line window, return to buffer
.IP \[bu] 2
\f[CR]<C\-c>\f[R]: Leave command line window open, return to command
line
.PP
From the command line \f[CR]<C\-c>\f[R] (or \f[CR]ESC\f[R]) will close
the command line window and return to the buffer, so
\f[CR]<C\-c><C\-c>\f[R] also closes the command line window and returns
to the buffer.
.SH \f[CR]wildmenu\f[R]
.IP \[bu] 2
\f[CR]<TAB>\f[R]: Show the wild menu
.IP \[bu] 2
\f[CR]<UP>\f[R]: Move up a directory
.IP \[bu] 2
\f[CR]<DOWN>\f[R]: Move down a directory
.SH Multiple Commands
.IP \[bu] 2
\f[CR]echo \[dq]hello\[dq] | echo \[dq]world\[dq]\f[R]
.SH History
.IP \[bu] 2
The history is stored in \f[CR]\[ti]/.viminfo\f[R]
.IP \[bu] 2
\f[CR]:his[tory] {name}\f[R]: List history, \f[CR]{name}\f[R] defaults
to \f[CR]:\f[R] for this command
.IP \[bu] 2
\f[CR]:call histdel(\[dq]:\[dq], \-1)\f[R]: Delete most recent item from
command\-line history
.SS \f[CR]{name}\f[R]
\f[CR]cmd\f[R] / \f[CR]:\f[R]: Command line history \f[CR]search\f[R] /
\f[CR]/\f[R]: Search pattern history \f[CR]expr\f[R] / \f[CR]=\f[R]:
Typed expression history \f[CR]input\f[R] / \f[CR]\[at]\f[R]: Input line
history \f[CR]debug\f[R] / \f[CR]>\f[R]: Debug command history
