{
  "Objective-C template": {
    "prefix": "rk_template",
    "body": "#import <Foundation/Foundation.h>\n\nint main() {\n    NSLog(@\"Hello, World!\");\n}",
    "description": "Objective-C template"
  },
  "Log": {
    "prefix": "rk_log",
    "body": "NSLog(@\"${1:Hello World}\");",
    "description": "Log"
  },
  "Log variable": {
    "prefix": "rk_log_var",
    "body": "NSLog(@\"$1 = %${2:@}\", ${1:result});",
    "description": "Log variable"
  },
  "Main": {
    "prefix": "rk_main",
    "body": "int main() {\n    NSLog(@\"Hello, World!\");\n}",
    "description": "Main function"
  },
  "Class": {
    "prefix": "rk_class",
    "body": "NS_ASSUME_NONNULL_BEGIN\n@interface ${1:MyClass} : NSObject\n$2\n@end\nNS_ASSUME_NONNULL_END\n\n@implementation $1\n$0\n@end",
    "description": "Objective-C template class"
  },
  "Delegate": {
    "prefix": "rk_delegate",
    "body": "NS_ASSUME_NONNULL_BEGIN\n@protocol ${1:MyClass}Delegate <NSObject>\n- (void)handleEventFor$1:($1 *)${2:myObject};\n- (${3:id})$2:($1 *)$2 ${4:valueForKey}:(${5:NSString *})${6:key};\n@end\nNS_ASSUME_NONNULL_END",
    "description": "Delegate"
  },
  "Protocol": {
    "prefix": "rk_protocol",
    "body": "@protocol ${1:MyProtocol} <NSObject>\n$0\n@end",
    "description": "Protocol"
  },
  "Implementation": {
    "prefix": "rk_implementation",
    "body": "@implementation ${1:MyClass}\n$0\n@end",
    "description": "Implementation"
  },
  "Interface": {
    "prefix": "rk_interface",
    "body": "NS_ASSUME_NONNULL_BEGIN\n@interface ${1:MyClass} : NSObject\n$0\n@end\nNS_ASSUME_NONNULL_END",
    "description": "Interface"
  },
  "Class Extension": {
    "prefix": "rk_interface_extension",
    "body": "NS_ASSUME_NONNULL_BEGIN\n@interface ${1:MyClass} (${2:MyCategory})\n$0\n@end\nNS_ASSUME_NONNULL_END",
    "description": "Class extension interface"
  },
  "Property": {
    "prefix": "rk_property",
    "body": "@property (nonatomic, strong) ${1:NSString} *${2:identifier};",
    "description": "Property"
  },
  "Delegate property": {
    "prefix": "rk_property_delegate",
    "body": "@property (nonatomic, assign, nullable) id <${1:MyDelegate}> *delegate;",
    "description": "Delegate property"
  },
  "Assume nonnull block": {
    "prefix": "rk_nonnull",
    "body": "NS_ASSUME_NONNULL_BEGIN\n${VISUAL}\nNS_ASSUME_NONNULL_END",
    "description": "Assume nonnull block"
  },
  "Initialization method": {
    "prefix": "rk_init",
    "body": "- (instancetype)initWith${1:Dictionary}:(NSDictionary *)${1/.*/\\l$0/}\n{\n    self = [super init];\n    if (self) {\n\t\t_${1/.*/\\l$0/} = ${1/.*/\\l$0/};\n    }\n    return self;\n}",
    "description": "Initialization method"
  },
  "For in": {
    "prefix": "rk_forin",
    "body": "for (${1:id} ${2:object} in ${3:objects}) {\n    $0\n}",
    "description": "Fast enumeration"
  },
  "for": {
    "prefix": "rk_for",
    "body": "for (int ${1:i} = ${2:0}; $1 < ${3:10}; $1++) {\n    ${0:NSLog(@\"%d\", i);}\n}",
    "description": "For loop"
  }
}
