{
  "C++ template": {
    "prefix": "rk_template",
    "body": "#include <iostream>\n\nint main() {\n  std::cout << \"Hello, World!\" << std::endl;\n}\n",
    "description": "C++ template"
  },
  "Print with this": {
    "prefix": "rk_cout",
    "body": "std::cout << this << \" ${1:message}\" << std::endl;",
    "description": "Print with this address"
  },
  "Print without this": {
    "prefix": "rk_cout_global",
    "body": "std::cout << \"${1:message}\" << std::endl;",
    "description": "Print without this address"
  },
  "Print variable without this": {
    "prefix": "rk_cout_var_global",
    "body": "std::cout << \"$1 = \" << ${1:result} << std::endl;",
    "description": "Print variable without this address"
  },
  "Print variable with this": {
    "prefix": "rk_cout_var",
    "body": "std::cout << this << \" $1 = \" << ${1:result} << std::endl;",
    "description": "Print variable with this address global"
  },
  "For loop": {
    "prefix": "rk_for",
    "body": "for (int ${1:i} = 0; $1 < ${2:10}; $1++) {\n    $0\n}",
    "description": "For loop"
  },
  "For loop array": {
    "prefix": "rk_for_array",
    "body": "for (std::size_t ${1:i} = 0; $1 < ${2:arr}.size(); ++$1) {\n    ${3:std::cout << arr[$1] << std::endl;}\n}",
    "description": "For loop array"
  },
  "For loop array range": {
    "prefix": "rk_for_array_range",
    "body": "for (int ${1:element} : ${2:arr}) {\n    ${3:std::cout << $1 << std:endl};\n}",
    "description": "For range loop array"
  },
  "For loop array iterator": {
    "prefix": "rk_for_array_iterator",
    "body": "for (auto it = ${1:arr}.begin(); it != $1.end(); ++it) {\n    ${2:std::cout << *it << std::endl;}\n}",
    "description": "For loop array iterator"
  }
}
