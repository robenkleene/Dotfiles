{
  "Print variable": {
    "prefix": ["rk_pv", "rk_cout_var"],
    "body": "std::cout << \"$1 = \" << ${1} << std::endl;",
    "description": "`cout` variable"
  },
  "Print": {
    "prefix": ["rk_p", "rk_cout"],
    "body": "std::cout << \"${1:Message}\" << std::endl;",
    "description": "`cout`"
  },
  "C++ template": {
    "prefix": "rk_template",
    "body": "#include <iostream>\n\nint main() {\n  std::cout << \"Hello, World!\" << std::endl;\n}\n",
    "description": "C++ template"
  },
  "Main function": {
    "prefix": "rk_main",
    "body": "int main() {\n  ${1:std::cout << \"Hello, World!\" << std::endl;}\n}",
    "description": "Main function"
  },
  "Include for `cout`": {
    "prefix": "rk_include_cout",
    "body": "#include <iostream>",
    "description": "Include for `cout`"
  },
  "Print this address": {
    "prefix": "rk_cout_addr",
    "body": "std::cout << this << std::endl;",
    "description": "`cout` this address"
  },
  "Print address of object": {
    "prefix": "rk_cout_var_addr",
    "body": "std::cout << \" &$1 = \" << &${1} << std::endl;",
    "description": "`cout` address of object"
  },
  "Print enum": {
    "prefix": "rk_cout_enum",
    "body": "std::cout << \" $1 = \" << static_cast<int>(${1}) << std::endl;",
    "description": "`cout` address of object"
  },
  "Print format string address of object": {
    "prefix": "rk_cout_var_fmt_addr",
    "body": "std::cout << \" &$1 = %p\" << &${1} << std::endl;",
    "description": "`cout` address of object using format string"
  },
  "Print array": {
    "prefix": ["rk_cout_array", "rk_print_array"],
    "body": "std::cout << \"${1} = \";\nfor (std::size_t i = 0; i < $1.size(); ++i) {\n  std::cout << (i > 0 ? \", \" : \"\") << $1[i];\n}\nstd::cout << std::endl;",
    "description": "`cout` array"
  },
  "Print map": {
    "prefix": ["rk_cout_map", "rk_print_map"],
    "body": "std::cout << \"${1} = {\";\nbool first = true;\nfor (const auto& pair : values) {\n  if (!first) {\n    std::cout << \", \";\n  }\n  std::cout << \"{\" << pair.first << \": \" << pair.second << \"}\";\n  first = false;\n}\nstd::cout << \"}\" << std::endl;",
    "description": "`cout` map"
  },
  "For loop": {
    "prefix": "rk_for",
    "body": "for (int ${1:i} = 0; $1 < ${2:10}; $1++) {\n    $0\n}",
    "description": "For loop"
  },
  "For loop array": {
    "prefix": "rk_for_array",
    "body": "for (std::size_t ${1:i} = 0; $1 < ${2}.size(); ++$1) {\n    ${3:std::cout << $2[$1] << std::endl;}\n}",
    "description": "For loop array"
  },
  "For loop array range": {
    "prefix": "rk_for_array_range",
    "body": "for (int ${1:element} : ${2}) {\n    ${3:std::cout << $1 << std:endl;}\n}",
    "description": "For range loop array"
  },
  "For loop array iterator": {
    "prefix": "rk_for_array_iterator",
    "body": "for (auto it = ${1:arr}.begin(); it != $1.end(); ++it) {\n    ${2:std::cout << *it << std::endl;}\n}",
    "description": "For loop array iterator"
  },
  "Suppress gMock warnings": {
    "prefix": "rk_gmock_suppress",
    "body": "::testing::FLAGS_gmock_verbose = \"error\";",
    "description": "Suppress gMock warnings"
  }
}
